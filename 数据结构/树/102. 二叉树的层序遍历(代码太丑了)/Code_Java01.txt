class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>>res = new LinkedList<>();
        if (root == null)
            return res;
        Queue<TreeNode>queue = new LinkedList<>();
        Map<TreeNode, Integer>map = new HashMap<>();
        queue.add(root);
        map.put(root, 0);
        List<Integer>tmp = new LinkedList<>();
        int nowNum = 0;
        while (!queue.isEmpty()){
            TreeNode nowTree = queue.remove();
            int nowTreeNum = map.get(nowTree);
            if (nowTreeNum != nowNum){
                List<Integer>now = new LinkedList<>(tmp);
                tmp.clear();
                res.add(now);
                nowNum++;
            }
            tmp.add(nowTree.val);
            if (nowTree.left != null){
                queue.add(nowTree.left);
                map.put(nowTree.left, nowTreeNum+1);
            }
            if (nowTree.right != null){
                queue.add(nowTree.right);
                map.put(nowTree.right, nowTreeNum+1);
            }
        }
        res.add(tmp);
        return res;
    }
}