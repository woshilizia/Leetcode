看到这是一道背包题，我很快反应过来
就是先求和，然后和/2，那么这道题就转化为
在数组中能否找到几个数，使得它们相加的和为这个和

很自然而然的想到了背包，相当于：
每个数，取不取的问题。

但虽然这样，我也不知道dp的状态应该怎么表示
dp应该如何来形容。

后来我觉得，dp[i]可以表示成，能不能从数组中凑出i的值，true or false
那么，既然这样的话，我要做的相当于，
更新状态

不过我代码写好之后，出了点问题。
我发现它会重复取一个数
比如1,2,3，答案是true，那就是2重复取了

我想到可以标记下，每个位置只能取一次
结果就是
3,3,3,4,5答案变成了false
因为它只能计算一次了，当然错误了。

最后我意识过来了，因为我是一维数组
如果我是0-sum遍历的话，那么它的状态更新有问题
因为它使用的是最新的状态，而不是之前的状态

所以得把遍历的顺序反一下
总的来说，就是这么一回事

01背包，如果想压缩空间，那么遍历顺序得注意一下
